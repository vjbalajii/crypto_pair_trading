// Mocks generated by Mockito 5.1.0 from annotations
// in crypto_pair_trading/test/view_model/trading_view_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:ui' as _i9;

import 'package:crypto_pair_trading/model/apis/api_response.dart' as _i3;
import 'package:crypto_pair_trading/model/order_book.dart' as _i5;
import 'package:crypto_pair_trading/model/repository/trading_repository.dart'
    as _i2;
import 'package:crypto_pair_trading/model/tick.dart' as _i4;
import 'package:crypto_pair_trading/model/trade.dart' as _i8;
import 'package:crypto_pair_trading/view_model/trading_view_model.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTradingRepository_0 extends _i1.Fake
    implements _i2.TradingRepository {}

class _FakeApiResponse_1<T> extends _i1.Fake implements _i3.ApiResponse<T> {}

class _FakeTick_2 extends _i1.Fake implements _i4.Tick {}

class _FakeOrderBook_3 extends _i1.Fake implements _i5.OrderBook {}

/// A class which mocks [TradingViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockTradingViewModel extends _i1.Mock implements _i6.TradingViewModel {
  MockTradingViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TradingRepository get repo =>
      (super.noSuchMethod(Invocation.getter(#repo),
          returnValue: _FakeTradingRepository_0()) as _i2.TradingRepository);
  @override
  _i3.ApiResponse<dynamic> get tickResponse => (super.noSuchMethod(
      Invocation.getter(#tickResponse),
      returnValue: _FakeApiResponse_1<dynamic>()) as _i3.ApiResponse<dynamic>);
  @override
  _i3.ApiResponse<dynamic> get orderBookResponse => (super.noSuchMethod(
      Invocation.getter(#orderBookResponse),
      returnValue: _FakeApiResponse_1<dynamic>()) as _i3.ApiResponse<dynamic>);
  @override
  _i4.Tick get tickModel => (super.noSuchMethod(Invocation.getter(#tickModel),
      returnValue: _FakeTick_2()) as _i4.Tick);
  @override
  _i5.OrderBook get orderBookModel =>
      (super.noSuchMethod(Invocation.getter(#orderBookModel),
          returnValue: _FakeOrderBook_3()) as _i5.OrderBook);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i7.Future<_i4.Tick?> fetchTickData(String? value) =>
      (super.noSuchMethod(Invocation.method(#fetchTickData, [value]),
          returnValue: Future<_i4.Tick?>.value()) as _i7.Future<_i4.Tick?>);
  @override
  _i7.Future<_i5.OrderBook?> fetchOrderBookData(String? value) =>
      (super.noSuchMethod(Invocation.method(#fetchOrderBookData, [value]),
              returnValue: Future<_i5.OrderBook?>.value())
          as _i7.Future<_i5.OrderBook?>);
  @override
  List<_i8.Trade> getTradeList(_i5.OrderBook? orderBook) =>
      (super.noSuchMethod(Invocation.method(#getTradeList, [orderBook]),
          returnValue: <_i8.Trade>[]) as List<_i8.Trade>);
  @override
  String toUpperCaseText(String? value) =>
      (super.noSuchMethod(Invocation.method(#toUpperCaseText, [value]),
          returnValue: '') as String);
  @override
  String appendCurrency(String? value) =>
      (super.noSuchMethod(Invocation.method(#appendCurrency, [value]),
          returnValue: '') as String);
  @override
  String getFormattedDateTime(String? value) =>
      (super.noSuchMethod(Invocation.method(#getFormattedDateTime, [value]),
          returnValue: '') as String);
  @override
  void addListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}

// Mocks generated by Mockito 5.1.0 from annotations
// in crypto_pair_trading/test/model/services/tick_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

import 'tick_service_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [TradingServiceTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockTradingServiceTest extends _i1.Mock
    implements _i2.TradingServiceTest {
  MockTradingServiceTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tickBaseUrl =>
      (super.noSuchMethod(Invocation.getter(#tickBaseUrl), returnValue: '')
          as String);
  @override
  String get orderBookBaseUrl =>
      (super.noSuchMethod(Invocation.getter(#orderBookBaseUrl), returnValue: '')
          as String);
  @override
  _i3.Future<dynamic> getTickResponse(String? url) =>
      (super.noSuchMethod(Invocation.method(#getTickResponse, [url]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> getOrderBookResponse(String? url) =>
      (super.noSuchMethod(Invocation.method(#getOrderBookResponse, [url]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  dynamic returnResponse(_i4.Response? response) =>
      super.noSuchMethod(Invocation.method(#returnResponse, [response]));
}
